//
//  CleanSwiftInteractor.swift
//  RXSwiftVIPER
//
//  Created by Alisher Saideshov on 15.04.2024.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CleanSwiftBusinessLogic {
    func fetchCartoonCharacters(request: Main.displayCartoonCharacters.Request)
    func saveSelectedItem(character: Main.displayCartoonCharacters.ViewModel.characterInformationModel)
}

protocol CleanSwiftDataStore {
    var chosenCharacter: CharResult? { get set }
}

class CleanSwiftInteractor: CleanSwiftBusinessLogic, CleanSwiftDataStore {
    var chosenCharacter: CharResult?
    var presenter: CleanSwiftPresentationLogic?
    var worker: CleanSwiftWorker?
    var characters: [CharResult] = []
    private let network = Network()

    // MARK: Do something

    func fetchCartoonCharacters(request: Main.displayCartoonCharacters.Request) {
        network.fatchCharacters { [weak self] result in
            DispatchQueue.main.async {
                switch result {
                case .success(let result):
                    let characters = result.results
                    self?.characters = characters

                    // передаем данные дальше в презентер
                    let response = Main.displayCartoonCharacters.Response(characters: characters)
                    self?.presenter?.presentFetchedCartoonCharacters(response: response)
                case .failure(let failure):
                    // Здесь можно как-то обработать ошибку
                    print(failure)
                }
            }
        }
    }

    func saveSelectedItem(character: Main.displayCartoonCharacters.ViewModel.characterInformationModel) {
        for characterItem in characters {
            if characterItem.id == character.id {
                chosenCharacter = characterItem
                break
            }
        }
    }
}
